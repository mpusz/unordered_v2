# The MIT License (MIT)
#
# Copyright (c) 2017 Mateusz Pusz
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

# Adapted from various sources, including:
# - Eric Niebler's Ranges: https://github.com/ericniebler/range-v3
# - Louis Dionne's Hana: https://github.com/ldionne/hana

language: c++

env:
  global:
    - DEPS_DIR=${TRAVIS_BUILD_DIR}/deps
    - CMAKE_VERSION="3.10.2"

cache:
  directories:
    - ${DEPS_DIR}/cmake-${CMAKE_VERSION}
    - ${DEPS_DIR}/llvm

git:
  depth: 3

matrix:
  include:
    - os: linux
      env: CLANG_VERSION=7 BUILD_TYPE=Release
      addons: &clang7
        apt:
          sources:
            - llvm-toolchain-trusty-7
          packages:
            - clang-7 libc++-7-dev libc++abi-7-dev

    - os: linux
      env: CLANG_VERSION=7 BUILD_TYPE=Debug
      addons: *clang7

before_install:
  - |
    # Set compilers provided in matrix
    export CXX="clang++-${CLANG_VERSION}" CC="clang-${CLANG_VERSION}"

  - |
    # Install requested CMake version
    if [ "${TRAVIS_OS_NAME}" == "linux" ]; then
      if [ ! -f ${DEPS_DIR}/cmake-${CMAKE_VERSION}/cached ]; then
        CMAKE_URL="https://cmake.org/files/v3.9/cmake-${CMAKE_VERSION}-Linux-x86_64.tar.gz"
        mkdir -p ${DEPS_DIR}/cmake-${CMAKE_VERSION}
        travis_retry wget --no-check-certificate --quiet -O - "${CMAKE_URL}" | tar --strip-components=1 -xz -C ${DEPS_DIR}/cmake-${CMAKE_VERSION}
        touch ${DEPS_DIR}/cmake-${CMAKE_VERSION}/cached
      else
        echo "Using cached cmake version ${CMAKE_VERSION}."
      fi
      export PATH="${DEPS_DIR}/cmake-${CMAKE_VERSION}/bin:${PATH}"
    else
      if ! brew ls --version cmake &>/dev/null; then brew install cmake; fi
    fi

  - |
    # Install conan
    export PATH=$HOME/.local/bin:$PATH
    pip install --user conan
    conan profile new default --detect
    conan profile update settings.compiler=clang default
    conan profile update settings.version=7.0 default
    conan profile update settings.compiler.libcxx=libc++ default
    conan remote add conan-mpusz https://api.bintray.com/conan/mpusz/conan-mpusz

  - |
    # Print environment
    which $CXX
    which $CC
    $CXX --version
    if [[ "$SANITIZER" != "" ]]; then echo SANITIZER=$SANITIZER; fi
    which cmake
    cmake --version
    conan --version
    conan profile show default

install:
  - |
    # Configure project
    cd ${TRAVIS_BUILD_DIR}
    mkdir build && cd build
    conan install .. -s build_type=${BUILD_TYPE} --build=missing
    cmake .. -DCMAKE_BUILD_TYPE=${BUILD_TYPE}
  - |
    # Dump cmake logs
    cat CMakeFiles/CMakeError.log
    cat CMakeFiles/CMakeOutput.log
  - |
    # Build project
    cmake --build .

script:
  - |
    # Run unit tests
    ctest -VV -j2
